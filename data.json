{
    "collections": [
        {
            "name": "File Handling",
            "snippets": [
                {
                    "title": "Write a C program to write a character and display it using fgetc() and fputc() functions.",
                    "code": "#include<stdio.h>\nint main(){\n    FILE *fp;\n    char ch, c;\n    fp = fopen(\"./filechar.txt\", \"w+\");\n    printf(\"Enter a character: \");\n    scanf(\"%s\", &ch);\n    fputc(ch, fp);\n    printf(\"Reading the file\\n\");\n    rewind(fp);\n    c = fgetc(fp);\n    printf(\"The entered character is %c\", c);\n    printf(\"\\nProgram executed by darshan subedi XII 746\");\n}",
                    "outputImage": "./assets/filehandling_ii/1_output.PNG",
                    "fileImage": "./assets/filehandling_ii/1_file.PNG"
                },
                {
                    "title": "Write a C program to write a number and display it using getw() and putw() functions.",
                    "code": "#include<stdio.h>\n\nint main(){\n    FILE *fp;\n    int n,n1;\n    fp = fopen(\"./fileint.txt\",\"w+\");\n    printf(\"Enter a number: \");\n    scanf(\"%d\",&n);\n    putw(n,fp);\n    printf(\"Reading the file\\n\");\n    rewind(fp);\n    n1 = getw(fp);\n    printf(\"The entered number is %d\\n\",n1);\n    printf(\"Program executed by darshan subedi XII 746\");\n}",
                    "outputImage": "./assets/filehandling_ii/2_output.PNG",
                    "fileImage": "./assets/filehandling_ii/2_file.PNG"
                }
            ]
        },
        {
            "name": "Dynamic Memory Allocation",
            "snippets": [
                {
                    "title": "Write a C program to demonstrate the use of malloc() and free().",
                    "code": "#include<stdio.h>\n#include<stdlib.h>\n\nint main(){\n    int *ptr;\n    ptr = (int*)malloc(5 * sizeof(int));\n    if (ptr == NULL) {\n        printf(\"Memory allocation failed!\\n\");\n        return 1;\n    }\n    for (int i = 0; i < 5; i++) {\n        ptr[i] = i + 1;\n    }\n    printf(\"Stored values: \");\n    for (int i = 0; i < 5; i++) {\n        printf(\"%d \", ptr[i]);\n    }\n    free(ptr);\n    return 0;\n}",
                    "outputImage": "./assets/malloc_output.PNG",
                    "fileImage": "./assets/malloc_file.PNG"
                }
            ]
        },
        {
            "name":"C programmin",
            "snippets":[
                {
                    "title":"What are the different types of control structures in programming",
                    "code":"Sequential Control\n#include <stdio.h>\n\nint main() {\n    // Sequential Execution\n    printf(\"Hello\\n\");\n    printf(\"World\\n\");\n    return 0;\n}\n\nSelection Control\nIf Statement\n#include <stdio.h>\nint main() {\n    // If Statement\n    int age = 18;\n    if (age >= 18) {\n        printf(\"You are an adult.\\n\");\n    }\n    return 0;\n}\n\nIf-Else Statement\n#include <stdio.h>\nint main() {\n    // If-Else Statement\n    int age = 16;\n    if (age >= 18) {\n        printf(\"You are an adult.\\n\");\n    } else {\n        printf(\"You are a minor.\\n\");\n    }\n    return 0;\n}\n\nRepetition Control (Loops)\nFor Loop\n#include <stdio.h>\nint main() {\n    // For Loop\n    for (int i = 0; i < 5; i++) {\n        printf(\"Iteration %d\\n\", i + 1);\n    }\n    return 0;\n}\n\nWhile Loop\n#include <stdio.h>\n\nint main() {\n    // While Loop\n    int count = 0;\n    while (count < 5) {\n        printf(\"Count is %d\\n\", count);\n        count++;\n    }\n    return 0;\n}\n\nJump Control\n#include <stdio.h>\nint main() {\n    // Break Statement\n    for (int i = 0; i < 10; i++) {\n        if (i == 5) {\n            break;  // Exit the loop when i is 5\n        }\n        printf(\"%d\\n\", i);\n    }\n    return 0;\n}\n\nContinue\n#include <stdio.h>\nint main() {\n    // Continue Statement\n    for (int i = 0; i < 5; i++) {\n        if (i == 2) {\n            continue;  // Skip the rest of the loop when i is 2\n        }\n        printf(\"%d\\n\", i);\n    }\n    return 0;\n}",
                    "outpuImage":"",
                    "fileImage":"",
                }
            ]
        }
    ]
}
